"editor.tokenColorCustomizations": {
    "textMateRules": [
        {
            // KEYWORDS
            "scope": [
                "keyword.control.flow.python",
                "keyword.control.import.python",
                "punctuation.definition.decorator.python",
                "storage.type.class.python",
                "keyword.operator.logical",
            ],
            "settings": {
                "fontStyle": "bold",
                "foreground": "#FF6188"
            }
        },
        { // dict(), set() etc. to functions
            "scope": [
                "source.python meta.function-call.python support.type.python",
                // Need to re-add this because return type hint from custom class shares scopes with functions xD
                "entity.name.function",
                // So do dunders, restore __init__ etc to nonbold
                "support.function.magic.python",
                "source.python meta.member.access.python meta.function-call.python meta.function-call.generic.python",
            ],
            "settings": {
                "fontStyle": "",
                "foreground": "#A9DC76"
            }
        },
        { // SELF
            "scope": [
                "source.python meta.member.access.python meta.item-access.python meta.item-access.arguments.python",
                "source.python meta.member.access.python meta.item-access.python meta.indexed-name.python",
                "source.python meta.item-access.python meta.item-access.arguments.python",
                "source.python meta.item-access.python meta.indexed-name.python",
            ],
            "settings": {
                "foreground": "#FCFCFA",
                "fontStyle": ""
            }
        }, // source.python meta.item-access.python meta.indexed-name.python // local type hint, ie tmp: List[int]
        // source.python meta.item-access.python meta.indexed-name.python // 
        { // CLASS
            "scope": [
                "entity.name.type.class.python",
                "meta.function.python meta.item-access.python meta.indexed-name.python",
                "meta.function.python",
                "entity.other.inherited-class",
                //"source.python meta.item-access.python meta.item-access.arguments.python",
                //"source.python meta.item-access.python meta.indexed-name.python",
                "source.python meta.function.python meta.function.parameters.python meta.item-access.python meta.indexed-name.python",
                //"source.python meta.function-call.python meta.function-call.generic.python",
                // Constructor call and own function have the same scopes :(
                // "meta.function-call.generic.python",
                "source.python meta.function.python meta.function.parameters.python meta.item-access.python meta.item-access.arguments.python",
            ],
            "settings": {
                "fontStyle": "bold",
                "foreground": "#1290c3" //"#6c99bb"
            }
        },
        { // PROPERTIES
            "scope": [
                //"meta.attribute.python",
                //"meta.function-call.generic.python",
                //"meta.function-call.python",
                "meta.attribute.python",
                "meta.member.access.python",
                "source.python meta.member.access.python meta.item-access.python meta.indexed-name.python"
            ],
            "settings": {
                //"foreground": "#eed40c"
                "foreground": "#FDDC67" // beta test change color later maybe
            }
        },
        { // SELF
            "scope": [
                "variable.language.special.self.python",
                "variable.parameter.function.language.special.self.python"
            ],
            "settings": {
                "foreground": "#FF6188",
                "fontStyle": "bold"
            }
        },
    ]
}
